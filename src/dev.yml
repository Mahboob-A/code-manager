# 280524, Monday, 6.00 pm

services: 
  code-manager: 
    restart: always 
    build: 
      context: . 
      dockerfile: ./docker/dev/django/Dockerfile
    volumes: 
      - .:/app:z 
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles 
    env_file: 
      - ./.envs/.dev/.django
      - ./.envs/.dev/.postgres
      - ./.envs/.dev/.mongo
    depends_on: 
      - postgres 
      - codemanager-cache-redis
    command: /start  # start command to start the dev server and consume messages from mq 
    networks: 
      - algocode-code-manager-network

  postgres: 
    build: 
      context: . 
      dockerfile: ./docker/dev/postgres/Dockerfile
    volumes: 
      - dev_postgres_data:/var/lib/postgresql/data
      - dev_postgres_data_backups:/backups
    env_file: 
      - ./.envs/.dev/.postgres 
    ports:
      - 5432:5432 
    networks: 
      - algocode-code-manager-network
  
  mongodb:
    build:
      context: .
      dockerfile: ./docker/dev/mongodb/Dockerfile
    env_file:
      - ./.envs/.dev/.mongo
    volumes:
      - dev_mongo_data:/data/db
      - dev_mongo_logs:/var/log/mongodb.log
    ports:
      - "27017:27017"
    command: mongod --dbpath /data/db 
    networks:
      - algocode-code-manager-network
    
  # Using a single redis instance for result cache and rate limiting as the server is limited on 1GB ram. 
  # But if scale is needed, create another redis instance for rate limiting and update the Middleware. 
  codemanager-cache-redis: 
    image: redis:7-alpine
    networks: 
      - algocode-code-manager-network

  nginx: 
    build: 
      context: . 
      dockerfile: ./docker/dev/nginx/Dockerfile
    restart: always
    depends_on: 
      - code-manager
    volumes: 
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles 
    ports: 
      - "8080:80"
    networks: 
      - algocode-code-manager-network
  
networks: 
  algocode-code-manager-network: 
    driver: bridge
  

volumes: 
  static_volume: 
  media_volume: 
  dev_postgres_data: {}
  dev_postgres_data_backups: {}
  dev_mongo_data: {}
  dev_mongo_logs: {}

  